import { File, isDirectory } from "@/lib/supabase";
import { Folder as FolderIcon } from "lucide-react";
import { File as FileIcon } from "lucide-react";

interface IProps {
  file: File;
  onClick?: (file: File) => void;
}

function formatDate(date: Date) {
  // Generated by GPT-4.
  let monthNames = [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec",
  ];

  let day = date.getDate(); // Day of the month
  let monthIndex = date.getMonth(); // Month index
  let year = date.getFullYear(); // Year
  let hour = date.getHours(); // Hour
  let minute = date.getMinutes(); // Minute
  let ampm = hour >= 12 ? "PM" : "AM";

  hour = hour % 12;
  hour = hour ? hour : 12; // the hour '0' should be '12'
  let strMinute = minute < 10 ? "0" + minute : minute;

  return (
    monthNames[monthIndex] +
    " " +
    day +
    ", " +
    year +
    " at " +
    hour +
    ":" +
    strMinute +
    " " +
    ampm
  );
}

function formatSize(bytes: number): string {
  // Generated by GPT-4.
  if (bytes === 0) return "0 B";

  const k = 1024;
  const sizes = ["B", "KB", "MB", "GB", "TB"];
  const i = Math.floor(Math.log(bytes) / Math.log(k));

  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + " " + sizes[i];
}

export default function FileRow({ file, onClick }: IProps) {
  const Icon = isDirectory(file) ? FolderIcon : FileIcon;
  return (
    <div
      className="h-8  hover:bg-gray-100 cursor-pointer items-center justify-start flex flex-row"
      onClick={() => {
        onClick && onClick(file);
      }}
    >
      <div className="flex items-center w-[50%] min-w-[250px]">
        <Icon className="mx-2.5" />
        <p
          title={file.name}
          className="truncate text-sm"
          style={{ width: "calc(100% - 50px);" }}
        >
          {file.name}
        </p>
      </div>
      <p className="w-[15%] min-w-[100px] text-sm text-gray-400">
        {file.metadata && file.metadata.size && formatSize(file.metadata.size)}
      </p>
      <p className="w-[30%] min-w-[160px] text-sm text-gray-400">
        {file.updated_at && formatDate(new Date(file.updated_at))}
      </p>
    </div>
  );
}
