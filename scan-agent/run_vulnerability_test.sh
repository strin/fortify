#!/bin/bash

# Test script runner for _write_vulnerabilities_to_db method
# This script helps set up the environment and run the test

set -e  # Exit on any error

echo "🧪 Vulnerability Database Write Test Runner"
echo "=========================================="

# Check if DATABASE_URL is set
if [ -z "$DATABASE_URL" ]; then
    echo "❌ ERROR: DATABASE_URL environment variable is not set"
    echo ""
    echo "Please set DATABASE_URL to your PostgreSQL connection string."
    echo "Example:"
    echo "  export DATABASE_URL='postgresql://user:password@localhost:5432/fortify'"
    echo "  $0"
    echo ""
    echo "Or run with inline environment variable:"
    echo "  DATABASE_URL='postgresql://user:password@localhost:5432/fortify' $0"
    exit 1
fi

echo "✅ DATABASE_URL is set"

# Check if we're in the correct directory
if [ ! -f "test_write_vulnerabilities.py" ]; then
    echo "❌ ERROR: test_write_vulnerabilities.py not found"
    echo "Please run this script from the scan-agent directory"
    exit 1
fi

# Check if Python is available
if ! command -v python3 &> /dev/null; then
    echo "❌ ERROR: python3 not found"
    echo "Please install Python 3.7 or higher"
    exit 1
fi

# Check Python version
python_version=$(python3 -c "import sys; print('.'.join(map(str, sys.version_info[:2])))")
echo "🐍 Using Python $python_version"

# Install dependencies if requirements.txt exists
if [ -f "requirements.txt" ]; then
    echo "📦 Installing dependencies..."
    pip3 install -r requirements.txt
    echo "✅ Dependencies installed"
fi

# Run the test
echo ""
echo "🚀 Running vulnerability database write test..."
echo ""

python3 test_write_vulnerabilities.py

test_exit_code=$?

echo ""
if [ $test_exit_code -eq 0 ]; then
    echo "🎉 Test completed successfully!"
else
    echo "❌ Test failed with exit code $test_exit_code"
fi

exit $test_exit_code
